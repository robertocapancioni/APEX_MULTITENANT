-- drop objects
drop table tn1_user cascade constraints;
drop table tn1_table cascade constraints;
drop package tn1_user_api;
drop package tn1_table_api;

-- create tables
create table tn1_user (
    id                             number generated by default on null as identity 
                                   constraint tn1_user_id_pk primary key,
    tenant_id                      number not null,
    username                       varchar2(255 char)
                                   constraint tn1_user_username_unq unique not null,
    created                        date not null,
    created_by                     varchar2(255 char) not null,
    updated                        date not null,
    updated_by                     varchar2(255 char) not null
)
;

create table tn1_table (
    id                             number generated by default on null as identity 
                                   constraint tn1_table_id_pk primary key,
    tenant_id                      number not null,
    field                          varchar2(4000 char),
    created                        date not null,
    created_by                     varchar2(255 char) not null,
    updated                        date not null,
    updated_by                     varchar2(255 char) not null
)
 partition by list (tenant_id) automatic  
 (partition p_0 values (0)  
)
;


-- triggers
create or replace trigger tn1_user_biu
    before insert or update 
    on tn1_user
    for each row
begin
    if :new.tenant_id is null then
        :new.tenant_id := 0;
    end if;
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end tn1_user_biu;
/

create or replace trigger tn1_table_biu
    before insert or update 
    on tn1_table
    for each row
begin
    if :new.tenant_id is null then
        :new.tenant_id := 0;
    end if;
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end tn1_table_biu;
/


-- APIs --
create or replace package tn1_user_api
is
 
    /* example:
        declare
            l_username                      varchar2(255);
        begin
        tn1_user_api.get_row (
            p_id                            => 1,
            p_username                      => l_username
            );
        end;
    */

    procedure get_row (
        p_id                           in  number,
        p_username                     out varchar2
    );
 
    /* example:
        begin
        tn1_user_api.insert_row (
            p_id                          => null,
            p_username                    => null
            );
        end;
    */

    procedure insert_row  (
        p_id                           in number default null,
        p_username                     in varchar2 default null
    );
    procedure update_row  (
        p_id                           in number default null,
        p_username                     in varchar2 default null
    );
    procedure delete_row (
        p_id                           in number
    );
end tn1_user_api;
/


create or replace package  body tn1_user_api
is
 
    procedure get_row (
        p_id                           in  number,
        p_username                     out varchar2
    )
    is
    begin
        for c1 in (select * from tn1_user where id = p_id) loop
            p_username := c1.username;
        end loop;
    end get_row;

 
    procedure insert_row  (
        p_id                           in number default null,
        p_username                     in varchar2 default null
    )
    is
    begin
        insert into tn1_user (
            id,
            username
        ) values (
            p_id,
            p_username
        );
    end insert_row;

    procedure update_row  (
        p_id                           in number default null,
        p_username                     in varchar2 default null
    )
    is
    begin
        update  tn1_user set 
            id = p_id,
            username = p_username
        where id = p_id;
    end update_row;

    procedure delete_row (
        p_id                           in number
    )
    is
    begin
        delete from tn1_user where id = p_id;
    end delete_row;

end tn1_user_api;
/


create or replace package tn1_table_api
is
 
    /* example:
        declare
            l_field                         varchar2(4000);
        begin
        tn1_table_api.get_row (
            p_id                            => 1,
            p_field                         => l_field
            );
        end;
    */

    procedure get_row (
        p_id                           in  number,
        p_field                        out varchar2
    );
 
    /* example:
        begin
        tn1_table_api.insert_row (
            p_id                          => null,
            p_field                       => null
            );
        end;
    */

    procedure insert_row  (
        p_id                           in number default null,
        p_field                        in varchar2 default null
    );
    procedure update_row  (
        p_id                           in number default null,
        p_field                        in varchar2 default null
    );
    procedure delete_row (
        p_id                           in number
    );
end tn1_table_api;
/


create or replace package  body tn1_table_api
is
 
    procedure get_row (
        p_id                           in  number,
        p_field                        out varchar2
    )
    is
    begin
        for c1 in (select * from tn1_table where id = p_id) loop
            p_field := c1.field;
        end loop;
    end get_row;

 
    procedure insert_row  (
        p_id                           in number default null,
        p_field                        in varchar2 default null
    )
    is
    begin
        insert into tn1_table (
            id,
            field
        ) values (
            p_id,
            p_field
        );
    end insert_row;

    procedure update_row  (
        p_id                           in number default null,
        p_field                        in varchar2 default null
    )
    is
    begin
        update  tn1_table set 
            id = p_id,
            field = p_field
        where id = p_id;
    end update_row;

    procedure delete_row (
        p_id                           in number
    )
    is
    begin
        delete from tn1_table where id = p_id;
    end delete_row;

end tn1_table_api;
/



-- load data
 
-- Generated by Quick SQL Friday June 09, 2023  16:38:50
 
/*
user
  username /nn /unique

table
    field

# settings = { prefix: "TN1", semantics: "CHAR", API: true, auditCols: true, tenantID: true, drop: true, language: "EN", APEX: true }
*/
